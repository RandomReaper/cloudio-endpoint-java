plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = rootProject.group
version = rootProject.version

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.10.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }

        mavenSources(MavenPublication) {
            from components.java
            artifact sourcesJar
        }

        mavenJavadoc(MavenPublication) {
            from components.java
            artifact javadocJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    pkg {
        repo = 'clients'
        name = project.group + ':' + project.name
        userOrg = 'cloudio-project'
        desc= 'cloud.iO Java endpoint library/client'
        websiteUrl = 'http://cloudio.hevs.ch'
        issueTrackerUrl = 'https://github.com/cloudio-project/cloudio/issues'
        vcsUrl = 'https://github.com/cloudio-project/cloudio'
        licenses = ['MIT']
        version {
            name = project.version
        }
    }
    publications = ['mavenJava', 'mavenSources', 'mavenJavadoc']
}